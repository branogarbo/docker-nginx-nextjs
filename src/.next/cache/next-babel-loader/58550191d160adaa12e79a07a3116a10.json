{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef, useState } from 'react';\nexport default function List(props) {\n  let input = useRef('');\n  let {\n    0: state,\n    1: setState\n  } = useState({\n    items: props.initItems\n  });\n  let listItems = state.items.map(item => __jsx(\"li\", null, item));\n  useEffect(() => input.current.focus());\n\n  let checkKey = event => {\n    if (event.key === \"Enter\") {\n      appendItem(input.current.value);\n    }\n  };\n\n  let appendItem = value => {\n    input.current.value = \"\";\n    value = value.trim(); // queue route\n\n    if (value.includes(',')) {\n      let itemQueue = value.split(',');\n      itemQueue.forEach(item => appendItem(item));\n    } // number route\n    else if (!isNaN(value)) {\n        if (value <= 0 || value > state.items.length) return;\n        state.items.splice(value - 1, 1);\n        setState({\n          items: state.items\n        });\n      } // string route\n      else {\n          if (value === \"*\") {\n            clearList();\n            return;\n          }\n\n          if (state.items.includes(value) || state.items.length >= 10) return;\n          state.items.push(value);\n          setState({\n            items: state.items\n          });\n        }\n  };\n\n  let clearList = () => {\n    setState({\n      items: []\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(props.type, {\n    className: \"list\"\n  }, listItems), __jsx(\"input\", {\n    onKeyDown: checkKey,\n    type: \"text\",\n    ref: input\n  }), __jsx(\"button\", {\n    onClick: () => appendItem(input.current.value)\n  }, \"submit\"), __jsx(\"button\", {\n    onClick: clearList\n  }, \"clear\"));\n}","map":null,"metadata":{},"sourceType":"module"}